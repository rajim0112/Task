.env code

PORT = 8800
DB_HOST = localhost
DB_USER = root
DB_PASSWORD = Raji
DB_DATABASE = user

****************************************

db.js code

const mysql = require("mysql2")
require('dotenv').config()

console.log(process.env.PORT);
const connection = mysql.createConnection({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_DATABASE
});

// const connection = mysql.createConnection({
//     host: "localhost",
//     user: 'root',
//     password: 'Raji',
//     database: "user"
// });

connection.connect((err) => {
    if (err) {
        console.error("Failed to connect:",err);
    } else {
        console.log("Connected to MySQL..!");
    }
});

module.exports = connection;

// const select_query = 'SELECT * FROM users'
// connection.query(select_query,(err,result) => {
//     if (err) {
//         console.error(err);
//     } else {
//         console.log(result);
//     }
// });

// const select_query = 'SELECT * FROM combine where PRICE > ? AND PRICE <? '
// const base_price= [70,100]
// connection.query(select_query, base_price, (err,result) => {
//     if (err) {
//         console.error(err);
//     } else {
//         console.log(result);
//     }
// });

// const insert_query = 'INSERT INTO users (username, email, gender) VALUES (?, ?, ?), (?, ?, ?)'
// const insert_parameters = ["Meghana", "meghana@gmail.com", "Female","Shiva", "shiva@gmail.com", "Male"]
// connection.query(insert_query, insert_parameters, (err,result) => {
//     if (err) {
//         console.error(err);
//     } else {
//         console.log(result);
//         console.log(result.affectedRows, "row was inserted");
//     }
// });

// const delete_query = 'DELETE FROM users where id = ?'
// const delete_parameters = 20
// connection.query(delete_query,delete_parameters, (err,result) => {
//     if (err) {
//         console.error(err);
//     } else {
//         console.log(result);
//     }
// });

// const update_query = 'UPDATE users SET username = ? WHERE email = ?'
// const update_parameters = [Pavan,'shiva@gmail.com']
// connection.query(update_query, update_parameters, (err,result) => {
//     if (err) {
//         console.error(err);
//     } else {
//         console.log(result);
//     }
// });

// ************************************

// const mysql = require("mysql2");
// require("dotenv").config();

// const connection = mysql.createConnection({
//   host: process.env.DB_HOST,
//   user: process.env.DB_USER,
//   password: process.env.DB_PASSWORD,
//   database: process.env.DB_DATABASE,
// });

// connection.connect((err) => {
//   if (err) {
//     console.error("Database connection failed:", err);
//   } else {
//     console.log("Connected to MySQL database!");
//   }
// });

// module.exports = connection;

****************************************

index.js

// const express = require("express")
// const connection = require("./db")

// const app = express()
// require('dotenv').config()

// console.log(process.env);

// app.use(express.urlencoded({extended:false}))
// app.use(express.json({extended: false}))

// app.get('/users', (req, res) => {

// })

// app.listen(process.env.PORT, () => console.log("Server has Started..!"))

// ************************Back <-> Front*********************

// const express = require("express")
// const users = require("./user") 
// const cors = require('cors')
// const db = require('./db')

// const app = express()
// require('dotenv').config()

// app.use(express.urlencoded({extended: false}))
// app.use(express.json({extended:false}))

// app.use(cors({
//     origin: "http://localhost:3000",
//     method: ["GET", "POST", "PATCH", "DELETE"]
// }))

// app.use('/user', users);

// app.listen(process.env.PORT, () => console.log("Server has Started..!"))

// *****************Postman related code*********************

// const express = require("express")
// const mysql = require("mysql2")
// const app = express()
// require('dotenv').config()

// app.use(express.urlencoded({extended: false}))
// app.use(express.json({extended:false}))

// const connection = mysql.createConnection({
//     host: process.env.DB_HOST,
//     user: process.env.DB_USER,
//     password: process.env.DB_PASSWORD,
//     database: process.env.DB_DATABASE
// });

// connection.connect((err) => {
//     if(err) {
//         console.log("Failed to Connect:", err);
//     }else {
//         console.log("Connected to MYSQL.....");
//     }
// });

// app.get('/users/getAll',(req,res) => {
// const select_all = "SELECT * FROM users;"
// connection.query(select_all,(err,result) => {
//     if(err) {
//         res.status(400).json({message: err.sqlMessage})
//     } else {
//         res.status(200).json(result)
//     }
// })
// })

// app.get('/users/getByid/:id',(req,res) => {
//     const id = req.params.id;
//     const select_byid = "SELECT * FROM users WHERE id= ?;"
//     connection.query(select_byid, id,(err,result) => {
//         if(err) {
//             res.status(400).json({message: err.sqlMessage})
//         } else {
//             if (result.length != 0) {
//                 res.status(200).json(result)
//             } else {
//                 res.status(404).json({message: `${id} doesn't exists`})
//             }
//         }
//     })
// })

// app.post('/users/add',(req,res) => {
//     const username = req.params.username;
//     const email = req.params.email;   
//     const gender = req.params.gender;

//     const insert_query = "INSERT INTO users (username,email,gender) VALUES (?, ?, ?);"
//     connection.query(insert_query, [username, email, gender], (err,result) => {
//         if(err) {
//             res.status(400).json({message: err.sqlMessage})
//         } else {
//             res.status(200).json({message: `${result.affectedRows} user was added..!`})
//         }
//         console.log(result);
//     })
// })

// app.delete('/users/deleteByid/:id',(req,res) => {
//     const id = req.params.id;

//     const delete_query = "DELETE FROM users WHERE id = ?"
//     connection.query(delete_query, id, (err,result) => {
//         if(err) {
//             res.status(400).json({message: err.sqlMessage})
//         } else {
//             if (result.affectedRows != 0) {
//                 res.status(200).json({message: `${result.affectedRows} user was deleted..!`})
//             } else {
//                 res.status(404).json({message: `${id} doesn't exists`})
//             }
//         }
//     })
// })

// app.patch("/users/updateByid/:id", (req, res) => {
// 	const id = req.params.id;

// 	const select_byId = "SELECT * FROM users WHERE id = ?;"
// 	connection.query(select_byId, id, (err, result) => {
// 		if (err) {
// 			res.status(400).json({ message: err.sqlMessage })
// 		} else {
// 			if (result.length != 0) {
// 				const old_values = result[0]

// 				const updated_values = {...old_values, ...req.body}
				
// 				const values = [updated_values.username, updated_values.email, id]
// 				console.log(values);

// 				const update_query = "UPDATE users SET username = ?, email = ?, gender = ? WHERE id = ?"
// 				connection.query(update_query, values, (err, result) => {
// 					if (err) {
// 						res.status(400).json({message: err.sqlMessage})
// 					} else {
// 						if (result.changedRows != 0) {
// 							res.status(200).json({message: `${result.changedRows} users was updated..!`})
// 						} else {
// 							res.status(404).json({message: `${id} doesn't updated`})
// 						}
// 					}
// 					consariole.log(result);
					
// 				})
// 			} else {
// 				res.status(404).json({ message: `${id} doesn't exist` })
// 			}
// 		}
// 	})
// })

// app.listen(process.env.PORT, () => console.log("Server has Started..!"))

// *****************************************

// const express = require('express');
// const cors = require('cors');
// const db = require('./db'); // Import the database connection
// const userRoutes = require('./user'); // Import your user routes

// const app = express();
// const PORT = 5000;

// // Enable CORS for all routes
// app.use(cors());

// // Parse incoming JSON requests
// app.use(express.json());

// // Test the database connection when the server starts
// (async () => {
//   try {
//     await db.execute("SELECT 1"); // Simple query to check the connection
//     console.log("Database connection is successful");
//   } catch (err) {
//     console.error("Database connection error:", err.message);
//     process.exit(1); // Stop the server if the database connection fails
//   }
// })();

// // Use user routes
// app.use('/api', userRoutes);  // This will handle /api/add, /api/get, etc.

// // Start the server
// app.listen(PORT, () => {
//   console.log("Server running on port", ${PORT});
// });

// *************************************

const express = require("express");
const cors = require("cors");
const dotenv = require("dotenv");
const userRoutes = require("./routes/user");

dotenv.config();

const app = express();

app.use(cors());
app.use(express.json());
app.use("/users", userRoutes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

****************************************

user.js

// const connection = require('./db')
// const express = require("express")
// // const router = express()
// const router = express.router();

// router.get('/getAll',(req,res) => {
//     const select_all = "SELECT * FROM users;"
//     connection.query(select_all,(err,result) => {
//         if(err) {
//             res.status(400).json({message: err.sqlMessage})
//         } else {
//             res.status(200).json(result)
//         }
//     })
// })

// router.get('/getById/:id',(req,res) => {
//     const id = req.params.QTY;
//     const select_byId = "SELECT * FROM users WHERE id= ?;"
//     connection.query(select_byId, id,(err,result) => {
//         if(err) {
//             res.status(400).json({message: err.sqlMessage})
//         } else {
//             if (result.length != 0) {
//                 res.status(200).json(result)
//             } else {
//                 res.status(404).json({message: `${id} doesn't exists`})
//             }
//         }
//     })
// })

// router.post('/add',(req,res) => {
//     const username = req.params.username;
//     const email = req.params.email;
//     const gender = req.params.gender;

//     const insert_query = "INSERT INTO users (username,email,gender) VALUES (?, ?, ?);"
//     connection.query(insert_query, [username,email,gender], (err,result) => {
//         if(err) {
//             res.status(400).json({message: err.sqlMessage})
//         } else {
//             res.status(200).json({message: `${result.affectedRows} user was added..!`})
//         }
//         console.log(result);
//     })
// })

// router.delete('/deleteById/:id',(req,res) => {
//     const id = req.params.id;

//     const delete_query = "DELETE FROM users WHERE id = ?"
//     connection.query(delete_query, id, (err,result) => {
//         if(err) {
//             res.status(400).json({message: err.sqlMessage})
//         } else {
//             if (result.affectedRows != 0) {
//                 res.status(200).json({message: `${result.affectedRows} user was deleted..!`})
//             } else {
//                 res.status(404).json({message: `${id} doesn't exists`})
//             }
//         }
//     })
// })

// router.patch("/updateById/:id", (req, res) => {
// 	const id = req.params.id;

// 	const select_byId = "SELECT * FROM users WHERE id = ?;"
// 	connection.query(select_byId, id, (err, result) => {
// 		if (err) {
// 			res.status(400).json({ message: err.sqlMessage })
// 		} else {
// 			if (result.length != 0) {
// 				const old_values = result[0]
// 				const updated_values = {...old_values, ...req.body}
// 				const values = [updated_values.username, updated_values.email, id]
// 				console.log(values);
// 				const update_query = "UPDATE users SET username = ?, email = ? WHERE id = ?"
// 				connection.query(update_query, values, (err, result) => {
// 					if (err) {
// 						res.status(400).json({message: err.sqlMessage})
// 					} else {
// 						if (result.changedRows != 0) {
// 							res.status(200).json({message: `${result.changedRows} user was updated..!`})
// 						} else {
// 							res.status(404).json({message: `${id} doesn't updated`})
// 						}
// 					}
// 					consariole.log(result);
					
// 				})
// 			} else {
// 				res.status(404).json({ message: `${id} doesn't exist` })
// 			}
// 		}
// 	})
// })

// module.exports = router

// *****************************************

const express = require("express");
const router = express.Router();
const connection = require("../db");

// Fetch All Users
router.get("/getAll", (req, res) => {
  const query = "SELECT * FROM users";
  connection.query(query, (err, result) => {
    if (err) return res.status(500).json({ message: err.sqlMessage });
    res.status(200).json(result);
  });
});

// Fetch User By ID
router.get("/getByid/:id", (req, res) => {
  const query = "SELECT * FROM users WHERE id = ?";
  connection.query(query, [req.params.id], (err, result) => {
    if (err) return res.status(500).json({ message: err.sqlMessage });
    if (result.length === 0) return res.status(404).json({ message: "User not found!" });
    res.status(200).json(result);
  });
});

// Add New User
router.post("/add", (req, res) => {
  const { name, email, gender } = req.body;
  const query = "INSERT INTO users (name, email, gender) VALUES (?, ?, ?)";
  connection.query(query, [name, email, gender], (err, result) => {
    if (err) return res.status(500).json({ message: err.sqlMessage });
    res.status(201).json({ message: "User added successfully!", userId: result.insertId });
  });
});

// Update User By ID
router.patch("/updateByid/:id", (req, res) => {
  const { name, email, gender } = req.body;
  const query = "UPDATE users SET name = ?, email = ?, gender = ? WHERE id = ?";
  connection.query(query, [name, email, gender, req.params.id], (err, result) => {
    if (err) return res.status(500).json({ message: err.sqlMessage });
    if (result.affectedRows === 0) return res.status(404).json({ message: "User not found!" });
    res.status(200).json({ message: "User updated successfully!" });
  });
});

// Delete User By ID
router.delete("/deleteByid/:id", (req, res) => {
  const query = "DELETE FROM users WHERE id = ?";
  connection.query(query, [req.params.id], (err, result) => {
    if (err) return res.status(500).json({ message: err.sqlMessage });
    if (result.affectedRows === 0) return res.status(404).json({ message: "User not found!" });
    res.status(200).json({ message: "User deleted successfully!" });
  });
});

module.exports = router;
